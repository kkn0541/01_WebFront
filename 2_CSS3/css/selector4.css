
/*일반 구조 선택자*/

/*:first child
    형제 관계의 요소 중 첫번째 요소
    #test1의 자식 요소들 중 
    형제관계의 요소 중 첫번째 요소 p태그인가? 를 검사 
    -> 맞음 . 첫번째 요소는 p태그여서 스타일 적용이 됨 

*/

#test1 > p:first-child {
/*         첫번째 자식이 P태그인가????*/

background-color: red;
color: white;
}


/* last-child : 형제 관계의 요소 중 마지막 요소

   #test1의 자식 요소들 중 
   형제관계의 요소 중 마지막 요소가 p태그인가? 를 검사 
   -> 아님 , 마지막 요소는 pre태그여서 스타일 적용 안됨
*/

#test1 >p:last-child{
/*      마지막 자식이 p태그인가???/ 아님! */
background-color: blue;    
}

/*#nth-child(수열) : 
    형제 관계 요소 중 지정된 수열번째 요소를 모두 선택
    -순서 따질때 1부터 시작 

    #test1의 자식 요소 중 2번째 요소를 선택하고 , 
    p 태그인지 검사

    */

#test1 > p:nth-child(2){
        /*p태그의 2번쨰 자식이 p태그인가?*/
background-color: yellow;

}

/*홀수 번째 형제 요소를 선택*/
#test1 > p:nth-child(2n-1){

    font-weight: "bold ";
    font-size: 30px;;
}

/*짝수 번쨰 형제 요소를 선택*/
#test1 > p:nth-child(2n){
    /*짝부번쨰를 골라서 p태그인지 검사 */
    border: 3px solid black;

}

/*nth-last-child(수열)
    형제 관계 요소 중 
    뒤에서부터 지정된 수열 번째 요소를 모두 선택

*/

#test1 >p:nth-last-child(2){
    /*뒤에서 부터 2번째 태그가 p인가??*/
    color : hotpink
}

/*형태 구조 선택자*/

/* : first-of-type
같이 선택된 형제들 중에서 첫번째 요소

#test2의 자식들 중 p태그들을 고른 후 그중 첫번째 요소 선택
*/

#test2> p:first-of-type{
    
    background-color: orange;
}

/*last of type*/
/*같이 선택된 형제들 중에서 마지막 요소
자식들 중 p태그 찾은 후에 last를 찾는다
*/
#test2 > p:last-of-type{
background-color: skyblue;
}
    
/*nth - of -type(수열)

같이 선택된 형제들 중에서 수열번째 모든 요소 
*/

#test2 > p:nth-of-type(2n-1){
    /*p태그 들 중에서만 찾는다 
      p태그들 중에서 홀수번째 */
    font-size: 30px;
}

/*같이 선택된 형제들 중에서 
    뒤에서 수열번째 모든 요소*/
#test2> p:nth-last-of-type(2n){
background-color: darkviolet;

}


/*부정 선택자*/
/*3의 배수 제외하고 선택*/


#test3> li:not(:nth-of-type(3n)){
/*not()안에는 3n이 아닌 선택자를 넣어서 3n을 넣어야함*/
    background-color: brown;
}
